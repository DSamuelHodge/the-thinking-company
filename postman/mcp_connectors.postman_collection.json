{
  "info": {
    "name": "MCP Connectors - Postman Collection",
    "_postman_id": "mcp-connectors-collection",
    "description": "Collection to test MCP connectors (JIRA, Confluence, Resend, Cal.com). Uses JSON runner (/mcp-json) and streamable HTTP (/mcp). Do NOT store secrets in this file.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "JIRA - search_issues (JSON)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tool\": \"search_issues\",\n  \"args\": { \"jql\": \"project = {{jira_project}}\" }\n}"
        },
        "url": {
          "raw": "{{mcp_json_url}}/mcp-json",
          "host": [
            "{{mcp_json_url}}/mcp-json"
          ]
        }
      }
      ,
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 or 400/401/410 accepted\", function (){",
              "  pm.expect(pm.response.code).to.be.oneOf([200,400,401,410,404]);",
              "});",
              "var body = pm.response.json ? pm.response.json() : {};",
              "pm.test(\"Response has result or error\", function(){",
              "  pm.expect(body).to.satisfy(function(b){ return b.hasOwnProperty('result') || b.hasOwnProperty('error'); });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "JIRA - invalid tool (JSON)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": { "mode": "raw", "raw": "{\n  \"tool\": \"not_a_real_tool\",\n  \"args\": {}\n}" },
        "url": { "raw": "{{mcp_json_url}}/mcp-json", "host": ["{{mcp_json_url}}/mcp-json"] }
      }
      ,
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 for unknown tool\", function(){",
              "  pm.expect(pm.response.code).to.equal(404);",
              "});",
              "var body = pm.response.json ? pm.response.json() : {};",
              "pm.test(\"Error message present\", function(){",
              "  pm.expect(body).to.have.property('error');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "JIRA - search_issues (streamable HTTP)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Accept", "value": "application/json, text/event-stream" }
        ],
        "body": { "mode": "raw", "raw": "{\n  \"tool\": \"search_issues\",\n  \"args\": { \"jql\": \"project = {{jira_project}}\" }\n}" },
        "url": { "raw": "{{mcp_http_url}}/mcp", "host": ["{{mcp_http_url}}/mcp"] }
      }
    },
    {
      "name": "JIRA - create_issue (JSON)",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "body": { "mode": "raw", "raw": "{\n  \"tool\": \"create_issue\",\n  \"args\": { \"project_key\": \"{{jira_project}}\", \"summary\": \"Test from Postman\", \"description\": \"Created by Postman collection\" }\n}" },
        "url": { "raw": "{{mcp_json_url}}/mcp-json", "host": ["{{mcp_json_url}}/mcp-json"] }
      }
    },
    {
      "name": "JIRA - get_issue (JSON)",
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "body": { "mode": "raw", "raw": "{\n  \"tool\": \"get_issue\",\n  \"args\": { \"issue_key\": \"{{jira_sample_issue}}\" }\n}" },
        "url": { "raw": "{{mcp_json_url}}/mcp-json", "host": ["{{mcp_json_url}}/mcp-json"] }
      }
    }
  ]
}
